연산자

연산자(operator)
    하나 이상의 표현식을 대상으로 산술, 할당, 비교, 논리, 타입. 지수 연산(operation) 등을 수행해 하나의 값을 만든다.
    연산의 대상을 피연산자(operand)라 하고, 피연산자는 값으로 평가될 수 있는 표현식이어야 한다.
    피연산자와 연산자의 조합으로 이뤄진 연산자 표현식도 값으로 평가될 수 있는 표현식이다.

산술 연산자(arithmetic operator)
    피연산자를 대상으로 수학적 계산을 수행해 새로운 숫자 값을 만든다.
    산술 연산이 불가능한 경우, NaN을 반환한다.

        이항(binary) 산술 연산자
            2개의 피연산자를 산술 연산하여 숫자 값을 만든다.
            모든 이항 산술 연산자는 피연산자의 값을 변경하는 부수 효과(side effect)가 없다.
            즉, 어떤 산술 연산을 해도 피연산자의 값이 바뀌는 경우는 없고 언제나 새로운 값을 만들 뿐이다.

        단항(unary) 산술 연산자
            1개의 피연산자를 산술하여 숫자 값을 만든다.

        문자열 연결 연산자
            + 연산자는 피연산자 중 하나 이상이 문자열인 경우 문자열 연결 연산자로 동작한다.
            그 외의 경우는 산술 연산자로 동작한다.

할당 연산자(assignment operator)
    우항에 있는 피연산자의 평가 결과를 좌항에 있는 변수에 할당한다.
    할당 연산자는 좌항의 변수에 값을 할당하므로 변수 값이 변하는 부수 효과가 있다.

비교 연산자(comparison operatoor)
    좌항과 우항의 피연산자를 비교한 다음 그 결과를 불리언 값으로 반환한다.

        등동/일치 비교 연산자
            동등 비교(loose equality) 연산자와 일치 비교(strict equality) 연산자는 좌항과 우항의 피연산자가 같은 값으로 평가되는지 비교해 불리언 값을 반환한다.
            하지만 비교하는 엄격성의 정도가 다르다.

        대소 관계 비교 연산자
            피연산자의 크기를 비교하여 불리언 값을 반환한다.

삼항 조건 연산자(ternary operator)
    조건식의 평가 결과에 따라 반환할 값을 결정한다.
    자바스크립트의 유일한 삼항 연산자이며, 부수 효과는 없다.

논리 연산자(logical operator)
    우항과 좌항의 피연산자(부정 논리 연산자의 경우 우항의 피연산자)를 논리 연산한다.

쉼표 연산자
    왼쪽 피연산자부터 차례대로 피연산자를 평가하고 마지막 피연산자의 평가가 끝나면 마지막 피연산자의 평가 결과를 반환한다.
    var x, y, z;
    x = 1, y = 2, z = 3; // 3

그룹 연산자
    소괄호(())로 피연산자를 감싸는 그룹 연산자는 자신의 피연산자인 표현식을 가장 먼저 평가한다.
    이는 연산자 우선순위가 가장 높으며, 연산자의 우선순위를 조절할 수 있다.
    10 * 2 + 3; // 23
    10 * (2 + 3); // 50

typeof 연산자
    피연산자의 타입을 문자열로 반환한다.
    7가지 문자열 "string", "number", "boolean", "undefined", "symbol", "object", "function" 중 하나를 반환한다.
    null을 반환하는 경우는 없으며 함수의 경우 "function"을 반환한다.
    typeof 연산자가 반환하는 문자열은 7개의 데이터 타입과 정확히 일치하지는 않는다.

지수 연산자
    좌항의 피연산자를 밑(base)으로, 우항의 피연산자를 지수(exponent)로 거듭 제곱하여 숫자 값을 반환한다.

그 외의 연산자
    연산자          개요
    ?.              옵셔널 체이닝 연산자
    ??              null 병합 연산자
    delete          프로퍼티 삭제
    new             생성자 함수를 호출할 때 사용하여 인스턴스를 생성
    instanceof      좌변의 객체가 우변의 생성자 함수와 연결된 인스턴스인지 판별
    in              프로퍼티 존재 확인

연산자와 부수 효과
    대부분의 연산자는 다른 코드에 영향을 주지 않는다.
    하지만 일부 연산자는 다른 코드에 영향을 주는 부수 효과가 있다.
    부수 효과가 있는 연산자는 할당 연산자(=), 증가/감소 연산자(++/--), delete 연산자가 있다.

연산자 우선순위
    여러 개의 연산자로 이뤄진 문이 실행될 때 연산자가 실행되는 순서를 말한다.
    
    우선순위    연산자
    1           ()
    2           new(매개변수 존재), ., [](프로퍼티 접근), ()(함수 호출), ?.(옵셔널 체이닝 연산자)
    3           new(매개변수 미존재)
    4           x++, x--
    5           !x, +x, -x, ++x, --x, typeof, delete
    6           **(이항 연산자 중에서 우선순위가 가장 높다)
    7           *, /, %
    8           +, -
    9           <, <=, >, >=, in, instanceof
    10          ==, !=, ===, !==
    11          ??(null 병합 연산자)
    12          &&
    13          ||
    14          ? ... : ...(삼항 연산자)
    15          할당 연산자(=, +=, -=, ...)
    16          ,

연산자 결합 순서
    연산자의 어느 쪽(좌항 또는 우항)부터 평가를 수행할 것인지 나타내는 순서
    
    결합 순서       연산자
    좌항 -> 우항    +, -, /, %, <, <=, >, >=, &&, ||, ., [], (), ??, ?., in, instanceof
    우항 -> 좌항    ++, --, 할당 연산자(=, +=, -=, ...), !x, +x, -x, ++x, --x, typeof, delete, ? ... : ...(삼항 연산자)